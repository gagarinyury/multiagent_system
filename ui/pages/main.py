"""
–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Streamlit
"""

import streamlit as st
import time
import threading # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from ui.components import (
    render_sidebar, render_chat_history,
    render_agent_workflow_progress, render_agent_output,
    render_save_to_project_button, render_project_selector
)

import logging # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logger = logging.getLogger("multiagent_system")


def render_main_page(orchestrator, workflow_manager):
    """
    –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

    Args:
        orchestrator: –≠–∫–∑–µ–º–ø–ª—è—Ä –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        workflow_manager: –≠–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    """
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –µ—Å—Ç—å –≤ app.py –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ router)
    # st.title("ü§ñ –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–æ–≤ (—Ç–µ–ø–µ—Ä—å —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º)
    # render_agent_workflow_progress –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –≤ –ø–æ—Ç–æ–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤—ã–∑–æ–≤ –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏

    # –ß–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π
    st.subheader("üí¨ –î–∏–∞–ª–æ–≥ —Å —Å–∏—Å—Ç–µ–º–æ–π")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
    if "messages" in st.session_state:
        render_chat_history(st.session_state.messages)

    # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_input = st.text_area("–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É –∏–ª–∏ –∑–∞–ø—Ä–æ—Å:", height=100, key="user_input_main")

    # –í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
    workflow_options = {
        "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å",
        "code_only": "–¢–æ–ª—å–∫–æ –∫–æ–¥",
        "code_to_project": "–ö–æ–¥ –≤ –ø—Ä–æ–µ–∫—Ç", # –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å
        "review_only": "–¢–æ–ª—å–∫–æ —Ä–µ–≤—å—é",
        "docs_only": "–¢–æ–ª—å–∫–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
    }
    selected_workflow = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å:",
        options=list(workflow_options.keys()),
        format_func=lambda x: workflow_options.get(x, x),
        key="workflow_selector_main"
    )

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
    if selected_workflow:
        workflow_info = workflow_manager.get_workflow_info(selected_workflow)
        st.info(f"**{workflow_info.get('name', '')}**: {workflow_info.get('description', '')}")

    # –û–ø—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    if selected_workflow == "code_to_project":
        with st.expander("üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞", expanded=True):
            # –ï—Å–ª–∏ —É –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ project_manager
            if hasattr(orchestrator, 'project_manager'):
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
                projects = orchestrator.project_manager.list_projects()
                
                project_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:", 
                                            key="project_name_input",
                                            help="–ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
                project_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:", 
                                                 key="project_description_input",
                                                 height=50)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ user_input –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
                if project_name:
                    project_info = f"\n–ü—Ä–æ–µ–∫—Ç: {project_name}"
                    if project_description:
                        project_info += f"\n–û–ø–∏—Å–∞–Ω–∏–µ: {project_description}"
                    
                    if user_input and not user_input.endswith("\n"):
                        user_input += "\n"
                    user_input += project_info
            else:
                st.warning("Project Manager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü—Ä–æ–µ–∫—Ç—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏.")

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤
    # –≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    progress_container = st.empty()


    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
    if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å", key="send_request_button"):
        if not user_input:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å!")
        else:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ app.py
            if "messages" not in st.session_state or \
               not st.session_state.messages or \
               st.session_state.messages[-1].get("role") != "user" or \
               st.session_state.messages[-1].get("content") != user_input:
                st.session_state.messages.append({"role": "user", "content": user_input})

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            with st.chat_message("user"):
                st.write(user_input)

            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏ —Å—Ç–∞—Ç—É—Å—ã –∞–≥–µ–Ω—Ç–æ–≤
            st.session_state.current_agent_results = None
            # –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∞–º —Å–±—Ä–æ—Å–∏—Ç —Å—Ç–∞—Ç—É—Å—ã –∞–≥–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º spinner –ø–æ–∫–∞ –∏–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–µ—Ä–≤—ã–π –∞–≥–µ–Ω—Ç –Ω–µ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å
            with st.spinner("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö API –∫–ª—é—á–µ–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
                providers_configured = False
                if "providers" in st.session_state:
                    for provider in st.session_state.providers.values():
                        if provider.is_configured():
                            providers_configured = True
                            break

                if not providers_configured:
                    st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω API –∫–ª—é—á –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫!")
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
                    if "messages" not in st.session_state: st.session_state.messages = []
                    st.session_state.messages.append({"role": "assistant", "content": "[Error] –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'."})
                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —á–∞—Ç–µ
                    with st.chat_message("assistant"):
                        st.error("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'.")

                else:
                    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è ProjectManager
                    if selected_workflow == "code_to_project" and hasattr(orchestrator, 'project_manager'):
                        # –ï—Å–ª–∏ —É –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ project_manager, –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ –∞–≥–µ–Ω—Ç
                        if "ProjectManager" in orchestrator.agents:
                            orchestrator.agents["ProjectManager"].project_manager = orchestrator.project_manager
                            logger.info("Project Manager –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–æ–µ–∫—Ç–æ–≤")
                        else:
                            logger.warning("–ê–≥–µ–Ω—Ç Project Manager –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–µ")

                    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
                    start_time = time.time()

                    # --- –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ ---
                    # –°–æ–∑–¥–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–º
                    stop_progress_thread = threading.Event()

                    def update_progress_ui():
                        """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
                        while not stop_progress_thread.is_set():
                            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–∑ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                            current_status = orchestrator.get_current_status()

                            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∞–≥–µ–Ω—Ç–æ–≤
                            with progress_container:
                                render_agent_workflow_progress(orchestrator)

                            # –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω (–ø—Ä–æ–≥—Ä–µ—Å—Å 100%) –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
                            if current_status["progress"] >= 100 or \
                               any(s.get("status") == "error" for s in current_status.get("agents", {}).values()):
                                break

                            time.sleep(0.5) # –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI


                    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    progress_thread = threading.Thread(target=update_progress_ui)
                    # progress_thread.daemon = True # Daemon-–ø–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º, –Ω–æ –º–æ–∂–µ—Ç –æ–±–æ—Ä–≤–∞—Ç—å—Å—è
                    progress_thread.start()


                    # --- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ---
                    # –≠—Ç–æ—Ç –≤—ã–∑–æ–≤ –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ Streamlit –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    results = workflow_manager.execute_workflow(selected_workflow, user_input)

                    # –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
                    stop_progress_thread.set()
                    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–æ—Å—å
                    progress_thread.join(timeout=1) # –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –Ω–∞–¥–æ–ª–≥–æ


                    total_time = time.time() - start_time
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≥–µ–Ω—Ç–æ–≤ –≤ session_state –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∏–∂–µ
                    st.session_state.current_agent_results = results

                    # –û—á–∏—â–∞–µ–º spinner –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                    # Streamlit spinner –≤ –±–ª–æ–∫–µ with –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç
                    pass # –ö–æ–¥ —Å–ø–∏–Ω–Ω–µ—Ä–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è

            # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ---
            # –≠—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–ø–µ—Ä—å –±–µ—Ä—É—Ç—Å—è –∏–∑ session_state –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è workflow
            st.subheader("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–æ–≤")
            
            # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
            generated_code = None
            
            if st.session_state.current_agent_results:
                for agent_name, agent_result in st.session_state.current_agent_results.items():
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∞–≥–µ–Ω—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if "result" in agent_result or "error" in agent_result:
                        result_content = agent_result.get("result", agent_result.get("error", "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"))
                        
                        # –ï—Å–ª–∏ —ç—Ç–æ Coder, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç
                        if agent_name == "Coder":
                            generated_code = result_content
                        
                        render_agent_output(
                            agent_name,
                            result_content,
                            agent_result.get("elapsed_time"),
                            agent_result.get("model"),
                            agent_result.get("provider")
                        )
                    else:
                         # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ result, –Ω–∏ error, –≤–æ–∑–º–æ–∂–Ω–æ, –∞–≥–µ–Ω—Ç –±—ã–ª –ø—Ä–æ–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω
                         # –í —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ render_agent_output —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—É—Å—Ç–æ–π –≤—ã–≤–æ–¥
                         pass # –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, render_agent_output –ø–æ–∫–∞–∂–µ—Ç "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞" –∏–ª–∏ –ø—É—Å—Ç–æ–π –±–ª–æ–∫

                # –ï—Å–ª–∏ –∫–æ–¥ –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç
                if generated_code and hasattr(orchestrator, 'project_manager') and selected_workflow != "code_to_project":
                    st.subheader("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –≤ –ø—Ä–æ–µ–∫—Ç")
                    st.write("–í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.")
                    render_save_to_project_button(generated_code, orchestrator.project_manager)


            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            st.info(f"–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∑–∞ {total_time:.2f} —Å–µ–∫—É–Ω–¥")


    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –≤ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–º—Å—è –±–ª–æ–∫–µ
    with st.expander("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"):
        st.write("**–í–µ—Ä—Å–∏—è:** 0.1.0")
        st.write("**–î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏:** –ê–ø—Ä–µ–ª—å 2025") # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Å–±–æ—Ä–∫–∏
        st.write("**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** –ö–æ–º–∞–Ω–¥–∞ –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ (–±–µ—Ä–µ—Ç—Å—è –∏–∑ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
        if orchestrator:
            token_usage = orchestrator.get_token_usage()

            col1, col2 = st.columns(2)
            with col1:
                st.metric("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ (–≤—Å–µ–≥–æ)", token_usage["total"])
            with col2:
                st.metric("–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å ($)", f"{token_usage['cost']:.6f}") # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–æ–ª—å—à–µ –∑–Ω–∞–∫–æ–≤

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ –∞–≥–µ–Ω—Ç–∞–º –∏ –º–æ–¥–µ–ª—è–º (–¥–µ—Ç–∞–ª—å–Ω–æ)
            if "per_agent" in token_usage and token_usage["per_agent"]:
                st.subheader("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ –∞–≥–µ–Ω—Ç–∞–º")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º dataframe –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–≥–ª—è–¥–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                agent_usage_data = []
                for agent, tokens in token_usage["per_agent"].items():
                    agent_usage_data.append({
                        "–ê–≥–µ–Ω—Ç": agent,
                        "–¢–æ–∫–µ–Ω—ã": tokens
                    })
                if agent_usage_data:
                    import pandas as pd
                    agent_usage_df = pd.DataFrame(agent_usage_data)
                    st.dataframe(agent_usage_df, use_container_width=True)

            if "per_model" in token_usage and token_usage["per_model"]:
                st.subheader("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ –º–æ–¥–µ–ª—è–º")
                model_data = []
                for model, usage in token_usage["per_model"].items():
                    input_tokens = usage.get("input", 0)
                    output_tokens = usage.get("output", 0)
                    from utils.token_counter import TokenCounter
                    model_data.append({
                        "–ú–æ–¥–µ–ª—å": model,
                        "–í—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã": input_tokens,
                        "–í—ã—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã": output_tokens,
                        "–í—Å–µ–≥–æ": input_tokens + output_tokens,
                        "–°—Ç–æ–∏–º–æ—Å—Ç—å ($)": TokenCounter.estimate_cost(model, input_tokens, output_tokens) # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–¥–µ—Å—å –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    })
                if model_data:
                    import pandas as pd
                    model_usage_df = pd.DataFrame(model_data)
                    st.dataframe(model_usage_df, use_container_width=True)


        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
        try:
            import platform
            system_info = platform.uname()
            st.write(f"**–°–µ—Ä–≤–µ—Ä:** {system_info.node}")
            st.write(f"**–û–°:** {system_info.system} {system_info.release}")
        except:
            pass


# –≠—Ç–æ—Ç –±–ª–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
# –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ app_router.py
if __name__ == "__main__":
    # –î–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–ø—Ä—è–º—É—é
    st.info("–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")